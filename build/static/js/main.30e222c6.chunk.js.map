{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","alignLinks","brand","className","href","centerChildren","id","menuIcon","options","draggable","edge","inDuration","onCloseEnd","onCloseStart","onOpenEnd","onOpenStart","outDuration","preventScrolling","node","copyrights","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2NA6GeA,MAxGf,WAEE,OACE,6BAEE,kBAAC,SAAD,CACFC,WAAW,QACXC,MAAO,uBAAGC,UAAU,aAAaC,KAAK,MAA/B,6EACPC,gBAAc,EACdC,GAAG,aACHC,SAAU,kBAAC,OAAD,aACVC,QAAS,CACPC,WAAW,EACXC,KAAM,OACNC,WAAY,IACZC,WAAY,KACZC,aAAc,KACdC,UAAW,KACXC,YAAa,KACbC,YAAa,IACbC,kBAAkB,IAGpB,kBAAC,SAAD,CAAQC,KAAK,KAAb,gJAMF,kBAAC,MAAD,CAAKf,UAAU,aACb,kBAAC,MAAD,KACE,wBAAIA,UAAU,gBAAd,4NAKJ,kBAAC,MAAD,CAAKA,UAAU,aACb,kBAAC,MAAD,CAAKA,UAAU,MACb,yBAAKA,UAAU,8BACX,kBAAC,OAAD,6BACF,uBAAGA,UAAU,iBAAb,qEACF,uBAAGA,UAAU,gBAAb,gPAGF,kBAAC,MAAD,CAAKA,UAAU,MACb,yBAAKA,UAAU,8BACX,kBAAC,OAAD,mBACA,uBAAGA,UAAU,iBAAb,iCACF,uBAAGA,UAAU,gBAAb,mZAGJ,kBAAC,MAAD,CAAKA,UAAU,MACb,yBAAKA,UAAU,8BACX,kBAAC,OAAD,kBACA,uBAAGA,UAAU,iBAAb,iCACF,uBAAGA,UAAU,gBAAb,sQAKN,kBAAC,MAAD,CAAKA,UAAU,aACb,kBAAC,MAAD,KAEE,6BACE,mMACA,wgCACA,8gCACA,ojBACA,4BACE,gZACA,6WACA,qdACA,sWACA,0XAEF,6mBACA,qWACA,4BACE,yiBACA,weAOR,kBAAC,SAAD,CACAA,UAAU,UACVgB,WAAW,oMAEX,wBAAIhB,UAAU,cAAd,6EAGA,uBAAGA,UAAU,4BAAb,kNCtFkBiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.30e222c6.chunk.js","sourcesContent":["import React from 'react';\nimport 'materialize-css';\nimport './index.css'\nimport { Button, Row, Col, Navbar, Icon, Footer } from 'react-materialize';\n\nfunction App() {\n\n  return (\n    <div>\n\n      <Navbar\n    alignLinks=\"right\"\n    brand={<a className=\"brand-logo\" href=\"#!\">Гарант сервис</a>}\n    centerChildren\n    id=\"mobile-nav\"\n    menuIcon={<Icon>menu</Icon>}\n    options={{\n      draggable: true,\n      edge: 'left',\n      inDuration: 250,\n      onCloseEnd: null,\n      onCloseStart: null,\n      onOpenEnd: null,\n      onOpenStart: null,\n      outDuration: 200,\n      preventScrolling: true\n    }}\n  >\n    <Button node=\"a\">\n      Воспользоваться гарантом\n    </Button>\n\n  </Navbar>\n\n  <Row className=\"container\">\n    <Col >\n      <h1 className=\"center-align\">\n        Сервис для проведения безопасных сделок\n      </h1>\n    </Col>\n  </Row>\n  <Row className=\"container\">\n    <Col className=\"s4\">\n      <div className=\"center promo promo-example\">\n          <Icon>assignment_turned_in</Icon>\n        <p className=\"promo-caption\">37 тыcяч сделок</p>\n      <p className=\"light center\">За нашими плечами тысячи довольных клиентов.</p>\n      </div>\n    </Col>\n    <Col className=\"s4\">\n      <div className=\"center promo promo-example\">\n          <Icon>assessment</Icon>\n          <p className=\"promo-caption\">473 млн ₽</p>\n        <p className=\"light center\">Сумма сделок. Данная цифра повзоляет понять, что мы дорожим своей репутацией.</p>\n      </div>\n    </Col>\n    <Col className=\"s4\">\n      <div className=\"center promo promo-example\">\n          <Icon>assistant</Icon>\n          <p className=\"promo-caption\">900 тыс ₽</p>\n        <p className=\"light center\">Максимальная сумма сделки. Да да и таковые бывают.</p>\n      </div>\n    </Col>\n  </Row>\n\n  <Row className=\"container\">\n    <Col >\n\n      <div >\n        <h2>Кто такой гарант и что он делает?</h2>\n        <p>Гарант — это нейтральная сторона, не имеющая отношения и не покровительствующая ни одному из участников сделки. Гарант берёт на себя роль арбитра, контролирующего соблюдение условий договора.</p>\n        <p>В фильме об агенте&nbsp;007 «Казино „Рояль“» роль гаранта выполнял швейцарский банк, державший внесённые участниками покерного турнира в общий призовой фонд средства до момента выявления победителя.</p>\n        <p>Если речь идёт о купле-продаже, то сделка с участием сервиса-гаранта происходит по следующему сценарию:</p>\n        <ol>\n          <li>Продавец и покупатель передают гаранту согласованные условия сделки.</li>\n          <li>Покупатель передаёт гаранту сумму, на которую заключена сделка.</li>\n          <li>Продавец передаёт товар или оказывает услугу покупателю, согласно условиям сделки.</li>\n          <li>Покупатель уведомляет гаранта, что продавец выполнил условия.</li>\n          <li>Гарант, получив уведомление покупателя, передаёт продавцу деньги.</li>\n        </ol>\n        <p>Аналогично строятся отношения заказчиков и фрилансеров, лиц, покупающих и предоставляющих определённые услуги.</p>\n        <p>Такая простая система исключает основные риски купли-продажи:</p>\n        <ul>\n          <li>Покупатель не может обмануть продавца и оставить деньги у себя, потому что деньги хранятся у гаранта.</li>\n          <li>Продавец не может не выполнить свои обязательства, иначе гарант не передаст ему деньги.</li>\n        </ul>\n      </div>\n\n    </Col>\n  </Row>\n\n  <Footer\n  className=\"example\"\n  copyrights=\"Copyright © Гарант сервис 2020 Все права защищены\"\n>\n  <h5 className=\"white-text\">\n    Гарант сервис\n  </h5>\n  <p className=\"grey-text text-lighten-4\">\n    Сохраним ваши средства в безопасности.\n  </p>\n</Footer>\n\n\n    </div>\n\n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}